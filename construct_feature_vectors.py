# Farokh Confectioner
# Fabio Di Troia
# Constructs feature vectors for the permissions

import sys
import os
import shutil

# args[1]: The directory containing all of the Android XML permission files
# args[2]: The used permissions text file
# args[3]: The output file to output all of the features
def main(args):
  MINIMUM_ARGS = 4
  if len(args) != MINIMUM_ARGS:
    print("Please enter correct number of args")
    exit(1)

  XML_PERMISSIONS_DIR = args[1]
  USED_PERMISSIONS_DIR = args[2]
  OUTPUT_DIR = args[3]

  try:
    os.remove(OUTPUT_DIR)
  except Exception:
    print("File: {} does not exist".format(OUTPUT_DIR))

  constructFeatures(XML_PERMISSIONS_DIR, USED_PERMISSIONS_DIR, OUTPUT_DIR)

def constructFeatures(permission_dir, used_permissions, output_dir):
  try:
    PERMISSION_FILE_NAME = "AndroidManifest.xml"
    for root, dirs, files in os.walk(permission_dir, topdown=False):
      for name in files:
        perm_file = os.path.join(root, name)
        if(os.path.isfile(perm_file)):
          recordFeatureCounts(perm_file, used_permissions, output_dir)
  except Exception as e:
    print(str(e))
    exit(1)
  print("Done")

def recordFeatureCounts(perm_file, used_permissions, output_dir):
  feature_vector = [0] * len(used_permissions)
  with open(used_permissions, "r") as used_perms:
    available_perms = used_perms.readlines()
    with open(perm_file, "r") as perms:
      for line in perms:
        if "permission" in line:
          temp = line.split("\"")[1] + "\n"
          if temp in available_perms:
            feature_num = available_perms.index(temp)
            feature_vector[feature_num] += 1

  with open(output_dir, "a") as output:
    output.write(perm_file + " ")
    vec = ""
    for val in feature_vector:
      vec += str(val) + " "
    output.write(vec[ :len(vec) - 1] + "\n")

if __name__ == "__main__":
  main(sys.argv)